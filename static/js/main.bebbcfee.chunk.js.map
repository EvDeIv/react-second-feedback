{"version":3,"sources":["components/Notification/Notification.js","components/Button/Button.js","components/Statistic/Statistic.js","components/FeedBack/FeedBack.js","index.js"],"names":["Notification","message","className","Button","feedbackType","addFeedback","onClick","Statistic","stats","countTotal","countPositive","keys","Object","map","el","FeedBack","state","good","neutral","bad","setState","values","reduce","a","b","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAIeA,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,sBAAMC,UAAU,QAAhB,SAAyBD,KCUnBE,EAXA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC9B,OACE,wBACEC,QAAS,kBAAMD,EAAYD,IAC3BF,UAAU,6FAFZ,SAIGE,KCaQG,EAnBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAClCC,EAAOC,OAAOD,KAAKH,GACvB,OACE,qCACE,oBAAIN,UAAU,oBAAd,wBACCS,EAAKE,KAAI,SAACC,GACT,OACE,sBAEEZ,UAAU,mBAFZ,mBAGKY,EAHL,YAGWN,EAAMM,KAFVA,MAKX,sBAAMZ,UAAU,mBAAhB,yBAA6CO,OAC7C,sBAAMP,UAAU,mBAAhB,sCAA0DQ,IAA1D,WCRAK,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,YAAc,SAACD,GACb,EAAKgB,UAAS,SAACJ,GACb,OAAO,eACJZ,EAAgBY,EAAMZ,IAAiB,O,EAK9CK,WAAa,WACX,OAAOG,OAAOS,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAGxDd,cAAgB,WACd,QAAU,EAAKM,MAAMC,KAAO,EAAKR,aAAgB,KAAKgB,QAAQ,I,4CAEhE,WACE,OACE,qCACE,oBAAIvB,UAAU,oBAAd,mCACA,cAAC,EAAD,CAAQE,aAAc,OAAQC,YAAaqB,KAAKrB,cAChD,cAAC,EAAD,CACED,aAAc,UACdC,YAAaqB,KAAKrB,cAEpB,cAAC,EAAD,CAAQD,aAAc,MAAOC,YAAaqB,KAAKrB,cAC9CqB,KAAKjB,aAAe,EACnB,cAAC,EAAD,CACED,MAAOkB,KAAKV,MACZP,WAAYiB,KAAKjB,WACjBC,cAAegB,KAAKhB,gBAGtB,cAAC,EAAD,CAAcT,QAAQ,gC,GAvCT0B,aA8CRZ,IC9Cfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,mCACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.bebbcfee.chunk.js","sourcesContent":["const Notification = ({ message }) => {\r\n  return <span className=\"block\">{message}</span>;\r\n};\r\n\r\nexport default Notification;\r\n","const Button = ({ feedbackType, addFeedback }) => {\r\n  return (\r\n    <button\r\n      onClick={() => addFeedback(feedbackType)}\r\n      className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded capitalize  ml-2 my-2\"\r\n    >\r\n      {feedbackType}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Statistic = ({ stats, countTotal, countPositive }) => {\r\n  let keys = Object.keys(stats);\r\n  return (\r\n    <>\r\n      <h2 className=\"text-xl font-bold\">Statistics</h2>\r\n      {keys.map((el) => {\r\n        return (\r\n          <span\r\n            key={el}\r\n            className=\"block capitalize\"\r\n          >{`${el}:${stats[el]}`}</span>\r\n        );\r\n      })}\r\n      <span className=\"block capitalize\">{`Total:${countTotal()}`}</span>\r\n      <span className=\"block capitalize\">{`Positive feedbacks:${countPositive()}%`}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport Button from \"./../Button/Button\";\r\nimport Statistic from \"./../Statistic/Statistic\";\r\n\r\nclass FeedBack extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addFeedback = (feedbackType) => {\r\n    this.setState((state) => {\r\n      return {\r\n        [feedbackType]: (state[feedbackType] += 1),\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotal = () => {\r\n    return Object.values(this.state).reduce((a, b) => a + b);\r\n  };\r\n\r\n  countPositive = () => {\r\n    return +((this.state.good / this.countTotal()) * 100).toFixed(2);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"text-xl font-bold\">Please leave feedback</h2>\r\n        <Button feedbackType={\"good\"} addFeedback={this.addFeedback}></Button>\r\n        <Button\r\n          feedbackType={\"neutral\"}\r\n          addFeedback={this.addFeedback}\r\n        ></Button>\r\n        <Button feedbackType={\"bad\"} addFeedback={this.addFeedback}></Button>\r\n        {this.countTotal() > 0 ? (\r\n          <Statistic\r\n            stats={this.state}\r\n            countTotal={this.countTotal}\r\n            countPositive={this.countPositive}\r\n          />\r\n        ) : (\r\n          <Notification message=\"There is no feedback\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedBack;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport FeedBack from \"./components/FeedBack/FeedBack\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <FeedBack></FeedBack>\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}